<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Personagens</title>
<style>
body {
    background-size: 100%;
    background-position: center;
    font-family: Arial, sans-serif;
    zoom:60%;

}

.navbar {

    color: #fff;
    padding: 40px;
}

.table-container {
    padding: 20px;
}

/* Estilo para a tabela */
table {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
    margin-bottom: 20px;
}

table th,
table td {
    padding: 5px;
    text-align: left;
    border-bottom: 1px solid #ccc;
}

table th {
    background-color: #333;
    color: #fff;
}

table tbody tr:nth-child(even) {
    background-color: #f2f2f2;
}

/* Estilo para a imagem na célula */
table td img {
    max-width: 100px;
    height: auto;
}

/* Estilo para o link */
table td a {
    color: #007bff;
    text-decoration: none;
}

table td a:hover {
    text-decoration: underline;
}
#gradient
{
width: 100%;
height: 200px;
padding: 0px;
margin: 0px;
}
.btn-adicionar {
display: inline-block;
padding: 10px 20px;
background-color: #007bff;
color: #fff; 
text-decoration: none;
border-radius: 5px;
transition: background-color 0.3s ease; 
width: 50%;
margin-left: 32%;
text-align: center;
font-size: x-large;
margin-top: 1em;
margin-bottom: 1em;
}

.btn-adicionar:hover {
background-color: #0056b3;
cursor: pointer; 
box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); 
}

#edit, #delete {

display: inline-block;
padding: 10px 20px;
color: #fff; 
text-decoration: none;
border-radius: 5px;
transition: background-color 0.3s ease; 
}

#edit, #delete:hover {
cursor: pointer; 
box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); 
}
#edit{
background-color: #007bff;
}
#delete{
background-color: #c61e1e;

}
#edit:hover{
background-color: #0056b3;
}
#delete:hover{
background-color: #7e0000;

}

</style>
  
</head>

<body id="gradient-body">
    <div class="navbar" style="background-color: rgba(247, 0, 235, 0.649);width: 100%;text-align: center; margin-left: 3em;border-radius: 1em;">

      <h1 id="title" style="display: inline;"> Rick and Morty</h1>
    </div>
    <div id="carousel-container">
      
      <a href="/addCharacter" class="btn-adicionar">Adicionar Personagem</a>
      <% if (typeof successMessage !== 'undefined') { %>
        <div class="alert alert-success">
          <%= successMessage %>
        </div>
      <% } %>
<% if (characters && characters.length > 0) { %>
          <table>
              <thead>
                  <tr>
                      <th>ID</th>
                      <th>Nome</th>
                      <th>Status</th>
                      <th>Espécie</th>
                      <th>Tipo</th>
                      <th>Gênero</th>
                      <th>Nome de Origem</th>
                      <th>Link de Origem</th>
                      <th>Link da Localização</th>
                      <th>Nome da Localização</th>
                      <th>Imagem</th>
                      <th>Data de Criação</th>
                      <th>URL</th>
                      <th>Ação</th>
                      <th>Ação</th>
                  </tr>
              </thead>
              <tbody>
                  <% characters.forEach((character) => { %>
                    <tr>
                      <td><%= character.id %></td>
                      <td><%= character.name %></td>
                      <td><%= character.status %></td>
                      <td><%= character.species %></td>
                      <td><%= character.type %></td>
                      <td><%= character.gender %></td>
                      <td><%= character.originName %></td>
                      <td><%= character.originLink %></td>
                      <td><%= character.locationName %></td>
                      <td><%= character.locationLink %></td>
                      <td><img src="<%= character.image %>" alt="<%= character.name %>" /></td>
                      <td><%= character.created %></td>
                      <td><a href="<%= character.url %>"><%= character.url %></a></td>
                      <td>
                        <!-- form para editar um personagem -->
                      <form action="/editPage" method="POST">
                      <input type="hidden" name="id" value="<%= character.id %>"> 
                       <button type="submit" class="btn-edit" id="edit">Editar</button>
                      </form>
                      </td>
                      <td>
                        <!-- form para excluir um personagem -->
                        <form action="/delete/<%= character.id %>" method="get" class="form-delete">
                          <!--<input type="hidden" name="id" value="<%= character.id %>">--> 
                          <button type="submit" class="btn-delete" id="delete">Excluir</button>
                        </form>
                      </td>
                    </tr>
                  <% }); %>
              </tbody>
          </table>
      <% } else { %>
          <p>Nenhum personagem encontrado.</p>
      <% } %>
    </div>
    <div class="pagination">
        <% if (characters.length >= 15) { %>
            <button id="previousPage" onclick="carregarPaginaAnterior()">Anterior</button>
            <button id="nextPage" onclick="carregarProximaPagina()">Próximo</button>
          <% } else { %>
        
          <p>Nenhum personagem encontrado.</p>
        <% } %>

<p style="display: none;" id="page"><%= page %></p>
    </body>


     <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
     <script>
    var colors = new Array(
    [62,35,255],
    [60,255,60],
    [255,35,98],
    [45,175,230],
    [255,0,255],
    [255,128,0]);

var step = 0;
var colorIndices = [0,1,2,3];
var gradientSpeed = 0.002;

function updateGradient() {
    if ( $===undefined ) return;

    var c0_0 = colors[colorIndices[0]];
    var c0_1 = colors[colorIndices[1]];
    var c1_0 = colors[colorIndices[2]];
    var c1_1 = colors[colorIndices[3]];

    var istep = 1 - step;
    var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);
    var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);
    var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);
    var color1 = "rgb("+r1+","+g1+","+b1+")";

    var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);
    var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);
    var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);
    var color2 = "rgb("+r2+","+g2+","+b2+")";

    $('#gradient').css({
        background: "-webkit-gradient(linear, left top, right top, from("+color1+"), to("+color2+"))"
    }).css({
        background: "-moz-linear-gradient(left, "+color1+" 0%, "+color2+" 100%)"
    });

    // Altere a cor da fonte (font color) do elemento <h1> com o ID "title"
    $('#title').css('color', color1);

    step += gradientSpeed;
    if (step >= 1) {
        step %= 1;
        colorIndices[0] = colorIndices[1];
        colorIndices[2] = colorIndices[3];

        colorIndices[1] = (colorIndices[1] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;
        colorIndices[3] = (colorIndices[3] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;
    }
}

setInterval(updateGradient, 10);
</script>
<script>
    setTimeout(function() {
      var successMessage = document.getElementById('success-message');
      if (successMessage) {
        successMessage.style.display = 'none';
      }
    }, 3000); 
  </script>


<script>
const characterTableBody = document.querySelector('tbody');
const charactersPerPage = 15;
let currentPage = parseInt(document.getElementById("page").textContent); // Obtenha a página atual do modelo EJS

// Função para carregar os personagens com base na página atual
async function carregarPersonagens(page) {
  // Faça uma solicitação AJAX para buscar os personagens da página
  const response = await fetch(`/?page=${page}`);
  const characters = await response.json();

  // Limpe a tabela de personagens
  characterTableBody.innerHTML = '';

  // Adicione os personagens à tabela
  characters.forEach((character) => {
    const row = document.createElement('tr');

        row.innerHTML = `
          <td>${character.id}</td>
          <td>${character.name}</td>
          <td>${character.status}</td>
          <td>${character.species}</td>
          <td>${character.type}</td>
          <td>${character.gender}</td>
          <td>${character.originName}</td>
          <td>${character.originLink}</td>
          <td>${character.locationName}</td>
          <td>${character.locationLink}</td>
          <td><img src="${character.image}" alt="${character.name}" /></td>
          <td>${character.created}</td>
          <td><a href="${character.url}">${character.url}</a></td>
          <td>
            <!-- Formulário para editar um personagem -->
            <form action="/editPage" method="POST">
              <input type="hidden" name="id" value="${character.id}">
              <button type="submit" class="btn-edit" id="edit">Editar</button>
            </form>
          </td>
          <td>
            <!-- Formulário para excluir um personagem -->
            <form action="/delete/${character.id}" method="get" class="form-delete">
              <button type="submit" class="btn-delete" id="delete">Excluir</button>
            </form>
          </td>
        `;
        characterTableBody.appendChild(row);
  });

  // Verifique se há uma página anterior ou seguinte
  document.getElementById('previousPage').disabled = page === 1;
  document.getElementById('nextPage').disabled = characters.length < charactersPerPage;
}

// Função para carregar a página anterior
function carregarPaginaAnterior() {
  if (currentPage > 1) {
    currentPage--;
    window.location.href = `/?page=${currentPage}`;

    carregarPersonagens(currentPage);
  }
}

// Função para carregar a próxima página
function carregarProximaPagina() {
  currentPage++;
  window.location.href = `/?page=${currentPage}`;
  carregarPersonagens(currentPage);
}

// Carregue os personagens da página inicial
carregarPersonagens(currentPage);
    </script>
</html>
